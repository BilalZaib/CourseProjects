# include <iostream.h>
# include <graphics.h>
# include <conio.h>
# include <stdio.h>
# include <stdlib.h>
#include<dos.h>


union REGS i, o;

int initmouse()
{
   i.x.ax = 0;
   int86(0X33,&i,&o);
   return ( o.x.ax );
}

void showmouseptr()
{
   i.x.ax = 1;
   int86(0X33,&i,&o);
}

void getmousepos(int *button, int *x, int *y)
{
   i.x.ax = 3;
   int86(0X33,&i,&o);

   *button = o.x.bx;
   *x = o.x.cx;
   *y = o.x.dx;
}


class tic
{
public:
	char square[10];

	tic()
	{
	square[0]='o';
	square[1]='1';
	square[2]='2';
	square[3]='3';
	square[4]='4';
	square[5]='5';
	square[6]='6';
	square[7]='7';
	square[8]='8';
	square[9]='9';
	}

void board()
{
      char msg[20];
      settextstyle(TRIPLEX_FONT, HORIZ_DIR, 8);
      sprintf(msg, "  TIC TAC TOE");
      outtextxy(2, 12, msg);
      line(2,100,1000,100);

      rectangle(170,150,470,350);
      line(170,280,470,280);
      line(170,215,470,215);

      line(270,150,270,350);
      line(370,150,370,350);
      settextstyle(TRIPLEX_FONT, HORIZ_DIR, 4);
      rectangle(0,110,150,170);
      outtextxy(10,175,"Player-1");
      rectangle(489,110,639,170);
      outtextxy(499,175,"Player-2");
      rectangle(230,370,410,420);

}
};

class tac : public tic
{
public:

int checkwin()
{
	if (square[1] == square[2] && square[2] == square[3])

		return 1;
	else if (square[4] == square[5] && square[5] == square[6])

		return 1;
	else if (square[7] == square[8] && square[8] == square[9])

		return 1;
	else if (square[1] == square[4] && square[4] == square[7])

		return 1;
	else if (square[2] == square[5] && square[5] == square[8])

		return 1;
	else if (square[3] == square[6] && square[6] == square[9])

		return 1;
	else if (square[1] == square[5] && square[5] == square[9])

		return 1;
	else if (square[3] == square[5] && square[5] == square[7])

		return 1;
	else if (square[1] != '1' && square[2] != '2' && square[3] != '3'
		    && square[4] != '4' && square[5] != '5' && square[6] != '6'
		  && square[7] != '7' && square[8] != '8' && square[9] != '9')

		return 0;
	else
		return -1;
}
};

class toe : public tac
{
public:

int game ()
{
int gdriver = DETECT;
int gmode;
int status;
int x,y,button=10;
initgraph(&gdriver, &gmode, "C://TC//BGI");
int player = 1,win;
	char mark;
	 status = initmouse();

   if ( status == 0 )
      printf("Mouse support not available.\n");
   else
   {
      showmouseptr();
     // getmousepos(&button,&x,&y);
      board();
      do
	{
	 getmousepos(&button,&x,&y);
	 if(button==1)
	 {
	 button=-1;
		 player=(player%2)?1:2;
		if(player==1)
		{
		 setfillstyle(SOLID_FILL ,20);
		 bar(0,110,150,170);
		 rectangle(0,110,150,170);
		}
		else
		{
		 setfillstyle(SOLID_FILL ,30);
		 bar(489,110,639,170);
		 rectangle(489,110,639,170);
		}

	      //	cout << "Player " << player << ", enter a number:  ";
		mark=(player == 1) ? 'X' : 'O';


		if ((x>170&&x<270)&&(y>150&&y<215)&&square[1]=='1')
			{
			player++;
			 square[1] = mark;
			 if(mark=='X')
			 {
			 setcolor(20);
			 setfillstyle(SOLID_FILL,20);
			 circle(220,182,25);
			 floodfill(220,182,20);
			}
			else
			{
			 setcolor(30);
			 setfillstyle(SOLID_FILL,30);
			 circle(220,182,25);
			 floodfill(220,182,30);
			}
			}

		if ((x>170&&x<270)&&(y>215&&y<280)&&square[4]=='4')
			{ player++;
			 square[4] = mark;
			 if(mark=='X')
			 {
			 setcolor(20);
			 setfillstyle(SOLID_FILL,20);
			 circle(220,248,25);
			 floodfill(220,248,20);
			 }
			 else
			 {
			 setcolor(30);
			 setfillstyle(SOLID_FILL,30);
			 circle(220,248,25);
			 floodfill(220,248,30);
			 }
			 }
		if ((x>170&&x<270)&&(y>280&&y<350)&&square[7]=='7')
			{ player++;
			square[7] = mark;
			if(mark=='X')
			 {
			 setcolor(20);
			 setfillstyle(SOLID_FILL,20);
			 circle(220,314,25);
			 floodfill(220,314,20);
			 }
			 else
			 {
			 setcolor(30);
			 setfillstyle(SOLID_FILL,30);
			 circle(220,314,25);
			 floodfill(220,314,30);
			 }
			}
		if ((x>270&&x<370)&&(y>150&&y<215)&&square[2]=='2')
			{ player++;
			square[2] = mark;
			if(mark=='X')
			 {
			 setcolor(20);
			 setfillstyle(SOLID_FILL,20);
			 circle(320,182,25);
			 floodfill(320,182,20);
			 }
			 else
			 {
			 setcolor(30);
			 setfillstyle(SOLID_FILL,30);
			 circle(320,182,25);
			 floodfill(320,182,30);
			 }
			}
	if ((x>270&&x<370)&&(y>215&&y<280)&&square[5]=='5')
			{ player++;
			 square[5] = mark;
			 if(mark=='X')
			 {
			 setcolor(20);
			 setfillstyle(SOLID_FILL,20);
			 circle(320,248,25);
			 floodfill(320,248,20);
			 }
			 else
			 {
			 setcolor(30);
			 setfillstyle(SOLID_FILL,30);
			 circle(320,248,25);
			 floodfill(320,248,30);
			 }
			}
	     if ((x>270&&x<370)&&(y>280&&y<350)&&square[8]=='8')
			{ player++;
			square[8] = mark;
				if(mark=='X')
			 {
			 setcolor(20);
			 setfillstyle(SOLID_FILL,20);
			 circle(320,314,25);
			 floodfill(320,314,20);
			 }
			 else
			 {
			 setcolor(30);
			 setfillstyle(SOLID_FILL,30);
			 circle(320,314,25);
			 floodfill(320,314,30);
			 }
			}
		if ((x>370&&x<470)&&(y>150&&y<215)&&square[3]=='3')
			{ player++;
			square[3] = mark;
			if(mark=='X')
			 {
			 setcolor(20);
			 setfillstyle(SOLID_FILL,20);
			 circle(420,182,25);
			 floodfill(420,182,20);
			 }
			 else
			 {
			 setcolor(30);
			 setfillstyle(SOLID_FILL,30);
			 circle(420,182,25);
			 floodfill(420,182,30);
			 }
			}
	if ((x>370&&x<470)&&(y>215&&y<280)&&square[6]=='6')
			{ player++;
			square[6] = mark;
				if(mark=='X')
			 {
			 setcolor(20);
			 setfillstyle(SOLID_FILL,20);
			 circle(420,248,25);
			 floodfill(420,248,20);
			 }
			 else
			 {
			 setcolor(30);
			 setfillstyle(SOLID_FILL,30);
			 circle(420,248,25);
			 floodfill(420,248,30);
			 }
			}
	if ((x>370&&x<470)&&(y>280&&y<350)&&square[9]=='9')
			{
			 player++;
			square[9] = mark;
				if(mark=='X')
			 {
			 setcolor(20);
			 setfillstyle(SOLID_FILL,20);
			 circle(420,314,25);
			 floodfill(420,314,20);
			 }
			 else
			 {
			 setcolor(30);
			 setfillstyle(SOLID_FILL,30);
			 circle(420,314,25);
			 floodfill(420,314,30);
			 }
			}
			}
		win=checkwin();
		if(win==1)
		{
		break;
		}
		if(win==0)
		{
		break;
		}
	}
	while(!kbhit());
	}
       //	board();
       settextstyle(TRIPLEX_FONT, HORIZ_DIR, 3);
	if(win==1)
       {
       if(player==3)
       {
       outtextxy(240,380,"Player-2 Win");
       }
       else
       {
       outtextxy(240,380,"Player-1 Win");
       }
       }
	else
	outtextxy(240,380,"Game Draw");
	cin.ignore();
	cin.get();
	return 0;
}

};



void main()
{  /*
   int gdriver = DETECT;
   int gmode;
   int errorcode;
   int i,left,top,right,bottom;
   int ch;
   char msg[40];
   char msg1[40];
   char msg2[20];
   char msg3[20];
   char msg4[20],msg5[20];


   initgraph(&gdriver, &gmode, "C://TC//BGI");

  errorcode = graphresult();
   if (errorcode != grOk)   an error occurred
   {
      printf("Graphics error: %s\n", grapherrormsg(errorcode));
      printf("Press any key to halt:");
      getch();
      exit(1);
   }

	settextstyle(TRIPLEX_FONT, HORIZ_DIR, 8);


      setbkcolor(0);
      sprintf(msg, "  TIC TAC TOE");
      outtextxy(2, 12, msg);
      line(2,100,1000,100);


      settextstyle(TRIPLEX_FONT, HORIZ_DIR, 5);
      setcolor(20);
      sprintf(msg1, "Submitted By:");
      outtextxy(20, 100, msg1);

      settextstyle(TRIPLEX_FONT, HORIZ_DIR, 3);
      setcolor(30);
      sprintf(msg2, "Hafiz Muhammad Bilal Zaib (p14-6099)");
      outtextxy(20, 150, msg2);

      settextstyle(TRIPLEX_FONT, HORIZ_DIR, 3);
      setcolor(30);
      sprintf(msg3, "Hamza Khan (p14-6092)");
      outtextxy(20,200, msg3);

      settextstyle(TRIPLEX_FONT, HORIZ_DIR, 3);
      setcolor(30);
      sprintf(msg4, "Farid Afzal (p14-6092)");
      outtextxy(20, 250, msg4);

      settextstyle(TRIPLEX_FONT, HORIZ_DIR, 2);
      setcolor(30);
      sprintf(msg5, "Press any key to continue & ESC to Exit");
      outtextxy(20, 300, msg5);

      ch=getch();
      if(ch==13)
      {*/
      clrscr();
      toe z;
      z.game();
      getch();
     // }
}